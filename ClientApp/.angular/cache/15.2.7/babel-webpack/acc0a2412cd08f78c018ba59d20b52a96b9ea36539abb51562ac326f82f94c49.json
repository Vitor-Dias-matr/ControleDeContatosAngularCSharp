{"ast":null,"code":"import _asyncToGenerator from \"E:/Workspaces/AngularCSharp/ControleDeContatosAngularCSharp/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeUsuarioComponent = class HomeUsuarioComponent {\n  constructor(usuarioService, alertService) {\n    this.usuarioService = usuarioService;\n    this.alertService = alertService;\n    this.usuarios = [];\n  }\n  ngOnInit() {\n    this.atualizarListaUsuarios();\n  }\n  atualizarListaUsuarios() {\n    this.usuarioService.BuscarTodos().subscribe(response => {\n      this.usuarios = response.data;\n    });\n  }\n  apagar(nContatos, nome, id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (nContatos.length > 0) {\n        _this.alertService.addErro(`Não foi possível apagar ${nome}! Pois, ${nome} possui ${nContatos} contatos vinculados a ele!`);\n      } else {\n        _this.usuarioService.Apagar(id).subscribe(response => {\n          if (response.data) {\n            console.log('response.data: ', response.data);\n            //MENSSAGEM q foi apagada\n            _this.atualizarListaUsuarios();\n          } else {\n            console.log('response.data: ', response.data);\n            // MENSSAGEM q nao foi apagada;\n          }\n        });\n      }\n    })();\n  }\n};\n\nHomeUsuarioComponent = __decorate([Component({\n  selector: 'app-home-usuario',\n  templateUrl: './home-usuario.component.html',\n  styleUrls: ['./home-usuario.component.css']\n})], HomeUsuarioComponent);\nexport { HomeUsuarioComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAE/BC,YACUC,cAAqC,EACrCC,YAA0B;IAD1B,mBAAc,GAAdD,cAAc;IACd,iBAAY,GAAZC,YAAY;IAHtB,aAAQ,GAAc,EAAE;EAIpB;EAEJC,QAAQ;IACN,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEQA,sBAAsB;IAC5B,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrD,IAAI,CAACC,QAAQ,GAAGD,QAAQ,CAACE,IAAI;IAC/B,CAAC,CAAC;EACJ;EAEMC,MAAM,CAACC,SAAoB,EAAEC,IAAY,EAAEC,EAAU;IAAA;IAAA;MACzD,IAAIF,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;QACxB,KAAI,CAACZ,YAAY,CAACa,OAAO,CAAC,2BAA2BH,IAAI,WAAWA,IAAI,WAAWD,SAAS,6BAA6B,CAAC;OAC3H,MACI;QACH,KAAI,CAACV,cAAc,CAACe,MAAM,CAACH,EAAE,CAAC,CAACP,SAAS,CAACC,QAAQ,IAAG;UAClD,IAAIA,QAAQ,CAACE,IAAI,EAAE;YACjBQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEX,QAAQ,CAACE,IAAI,CAAC;YAC7C;YACA,KAAI,CAACL,sBAAsB,EAAE;WAC9B,MACI;YACHa,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEX,QAAQ,CAACE,IAAI,CAAC;YAC7C;;QAEJ,CAAC,CAAC;;IACH;EACH;CACD;;AAnCYV,oBAAoB,eALhCD,SAAS,CAAC;EACTqB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWtB,oBAAoB,CAmChC;SAnCYA,oBAAoB","names":["Component","HomeUsuarioComponent","constructor","usuarioService","alertService","ngOnInit","atualizarListaUsuarios","BuscarTodos","subscribe","response","usuarios","data","apagar","nContatos","nome","id","length","addErro","Apagar","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\usuario\\home-usuario\\home-usuario.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { UsuarioServiceService } from 'src/app/Services/Usuario/usuario-service.service';\n\nimport { Usuario } from 'src/app/Models/Usuario';\nimport { AlertService } from '../../../../Services/Menssagens/Alert/alert.service';\r\nimport { Contato } from '../../../../Models/Contato';\r\n\n@Component({\n  selector: 'app-home-usuario',\n  templateUrl: './home-usuario.component.html',\n  styleUrls: ['./home-usuario.component.css']\n})\nexport class HomeUsuarioComponent implements OnInit {\n  usuarios: Usuario[] = [];\n  constructor(\n    private usuarioService: UsuarioServiceService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.atualizarListaUsuarios();\n  }\n\n  private atualizarListaUsuarios() {\n    this.usuarioService.BuscarTodos().subscribe(response => {\n      this.usuarios = response.data;\n    });\n  }\n\n  async apagar(nContatos: Contato[], nome: string, id: number,) {\n    if (nContatos.length > 0) {\r\n      this.alertService.addErro(`Não foi possível apagar ${nome}! Pois, ${nome} possui ${nContatos} contatos vinculados a ele!`);\n    }\n    else {\r\n      this.usuarioService.Apagar(id).subscribe(response => {\n        if (response.data) {\r\n          console.log('response.data: ', response.data);\r\n          //MENSSAGEM q foi apagada\r\n          this.atualizarListaUsuarios();\r\n        }\r\n        else {\r\n          console.log('response.data: ', response.data);\r\n          // MENSSAGEM q nao foi apagada;\r\n        }\n      });\r\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}