{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../Services/Usuario/usuario-service.service\";\nimport * as i2 from \"src/app/Services/Contato/contato-service.service\";\nimport * as i3 from \"../../../../Services/Menssagens/Modal/modal.service\";\nimport * as i4 from \"../../../../Services/Menssagens/Alert/alert.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../../../menssagens/modal/modal.component\";\nfunction HomeContatoComponent_tbody_25_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"div\", 14)(13, \"a\", 15);\n    i0.ɵɵtext(14, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"a\", 16);\n    i0.ɵɵlistener(\"click\", function HomeContatoComponent_tbody_25_tr_1_Template_a_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const contato_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.apagar(contato_r4.id, contato_r4.nome));\n    });\n    i0.ɵɵtext(16, \"Apagar\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const contato_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r5 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contato_r4.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contato_r4.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contato_r4.celular);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((contato_r4.usuario == null ? null : contato_r4.usuario.nome) || \"Nenhum\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/atualizar-contato/\", contato_r4.id, \"\");\n  }\n}\nfunction HomeContatoComponent_tbody_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\", 11);\n    i0.ɵɵtemplate(1, HomeContatoComponent_tbody_25_tr_1_Template, 17, 6, \"tr\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.contatos);\n  }\n}\nfunction HomeContatoComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 17);\n    i0.ɵɵtext(2, \"N\\u00E3o h\\u00E1 contatos cadastrados!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class HomeContatoComponent {\n  constructor(usuarioService, contatoService, modalService, alertService) {\n    this.usuarioService = usuarioService;\n    this.contatoService = contatoService;\n    this.modalService = modalService;\n    this.alertService = alertService;\n    this.usuarios = [];\n    this.contatos = [];\n  }\n  ngOnInit() {\n    this.atualizarListaContatos();\n  }\n  atualizarListaContatos() {\n    this.contatoService.BuscarTodos().subscribe(response => {\n      this.contatos = response.data;\n      for (let contato of this.contatos) {\n        this.usuarioService.BuscarPorId(contato.usuarioId).subscribe(response => {\n          contato.usuario = response.data;\n        });\n      }\n    });\n  }\n  apagarConfirmacao(apagar) {\n    this.ac = apagar;\n  }\n  apagar(id, nome) {\n    this.modalService.add(`Você realmente deseja apagar ${nome}?`);\n    if (this.ac) {\n      this.contatoService.Apagar(id).subscribe(response => {\n        if (response.data) {\n          this.atualizarListaContatos();\n          this.alertService.addSucesso(`${nome} apagado com sucesso!`);\n        }\n      });\n    }\n    this.modalService.fecharModal();\n  }\n}\nHomeContatoComponent.ɵfac = function HomeContatoComponent_Factory(t) {\n  return new (t || HomeContatoComponent)(i0.ɵɵdirectiveInject(i1.UsuarioServiceService), i0.ɵɵdirectiveInject(i2.ContatoServiceService), i0.ɵɵdirectiveInject(i3.ModalService), i0.ɵɵdirectiveInject(i4.AlertService));\n};\nHomeContatoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeContatoComponent,\n  selectors: [[\"app-home-contato\"]],\n  decls: 28,\n  vars: 2,\n  consts: [[3, \"onConfirm\"], [1, \"mt-3\", \"botao\"], [\"routerLink\", \"/new-contato\", \"role\", \"button\", 1, \"btn\", \"btn-primary\"], [1, \"text-center\"], [1, \"text-tertiary\", \"mt-4\"], [1, \"tabela\", \"mt-4\", \"text-center\"], [1, \"table\", \"table-hover\"], [1, \"table-active\"], [\"scope\", \"col\"], [\"class\", \"table-hover\", 4, \"ngIf\", \"ngIfElse\"], [\"noContato\", \"\"], [1, \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"role\", \"group\", 1, \"btn-group\"], [\"role\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"role\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"colspan\", \"7\", 1, \"text-center\"]],\n  template: function HomeContatoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-modal\", 0);\n      i0.ɵɵlistener(\"onConfirm\", function HomeContatoComponent_Template_app_modal_onConfirm_0_listener($event) {\n        return ctx.apagarConfirmacao($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Adicionar novo contato\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h2\");\n      i0.ɵɵtext(6, \"Lista de Contatos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"hr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"table\", 6)(11, \"thead\")(12, \"tr\", 7)(13, \"th\", 8);\n      i0.ɵɵtext(14, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 8);\n      i0.ɵɵtext(16, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 8);\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\", 8);\n      i0.ɵɵtext(20, \"Celular\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\", 8);\n      i0.ɵɵtext(22, \"Usu\\u00E1rio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\", 8);\n      i0.ɵɵtext(24, \"A\\u00E7\\u00F5es\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(25, HomeContatoComponent_tbody_25_Template, 2, 1, \"tbody\", 9);\n      i0.ɵɵtemplate(26, HomeContatoComponent_ng_template_26_Template, 3, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(27);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", ctx.contatos.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.RouterLink, i7.ModalComponent],\n  styles: [\"hr[_ngcontent-%COMP%] {\\r\\n  margin: auto;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.tabela[_ngcontent-%COMP%] {\\r\\n  margin: auto;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.botao[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYWdlcy9jb250YXRvL2hvbWUtY29udGF0by9ob21lLWNvbnRhdG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaHIge1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB3aWR0aDogNzUlO1xyXG59XHJcblxyXG4udGFiZWxhIHtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxuLmJvdGFvIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HomeContatoComponent","constructor","usuarioService","contatoService","modalService","alertService","ngOnInit","atualizarListaContatos","BuscarTodos","subscribe","response","contatos","data","contato","BuscarPorId","usuarioId","usuario","apagarConfirmacao","apagar","ac","id","nome","add","Apagar","addSucesso","fecharModal","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\home-contato\\home-contato.component.html","E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\home-contato\\home-contato.component.ts"],"sourcesContent":["<app-modal (onConfirm)=\"apagarConfirmacao($event)\"></app-modal>\r\n\r\n<div class=\"mt-3 botao\">\r\n  <a routerLink=\"/new-contato\" class=\"btn btn-primary\" role=\"button\">Adicionar novo contato</a>\r\n</div>\r\n\r\n<div class=\"text-center\">\r\n  <h2>Lista de Contatos</h2>\r\n</div>\r\n\r\n<div class=\"text-tertiary mt-4\">\r\n  <hr>\r\n</div>\r\n\r\n<div class=\"tabela mt-4 text-center\">\r\n  <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr class=\"table-active\">\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Nome</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Celular</th>\r\n        <th scope=\"col\">Usuário</th>\r\n        <th scope=\"col\">Ações</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody class=\"table-hover\" *ngIf=\"contatos.length > 0; else noContato\">\r\n      <tr *ngFor=\"let contato of contatos; let i = index\">\r\n        <th scope=\"row\">{{i + 1}}</th>\r\n        <td>{{contato.nome}}</td>\r\n        <td>{{contato.email}}</td>\r\n        <td>{{contato.celular}}</td>\r\n        <td>{{contato.usuario?.nome || 'Nenhum'}}</td>\r\n        <td>\r\n          <div class=\"btn-group\" role=\"group\">\r\n            <a role=\"button\" class=\"btn btn-primary\" routerLink=\"/atualizar-contato/{{contato.id}}\">Editar</a>\r\n            <a role=\"button\" class=\"btn btn-danger\" (click)=\"apagar(contato.id, contato.nome)\">Apagar</a>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n\r\n    <ng-template #noContato>\r\n      <tr>\r\n        <td colspan=\"7\" class=\"text-center\">Não há contatos cadastrados!</td>\r\n      </tr>\r\n    </ng-template>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { UsuarioServiceService } from '../../../../Services/Usuario/usuario-service.service';\nimport { ContatoServiceService } from 'src/app/Services/Contato/contato-service.service';\n\nimport { Usuario } from '../../../../Models/Usuario';\nimport { Contato } from 'src/app/Models/Contato';\nimport { ModalService } from '../../../../Services/Menssagens/Modal/modal.service';\r\nimport { AlertService } from '../../../../Services/Menssagens/Alert/alert.service';\r\n\n@Component({\n  selector: 'app-home-contato',\n  templateUrl: './home-contato.component.html',\n  styleUrls: ['./home-contato.component.css']\n})\nexport class HomeContatoComponent implements OnInit {\n  usuarios: Usuario[] = [];\n  contatos: Contato[] = [];\n  ac!: boolean;\n\n  constructor(\n    private usuarioService: UsuarioServiceService,\n    private contatoService: ContatoServiceService,\n    private modalService: ModalService,\n    private alertService: AlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.atualizarListaContatos();\n  }\n\n  private atualizarListaContatos() {\n    this.contatoService.BuscarTodos().subscribe(response => {\n      this.contatos = response.data;\n\r\n      for (let contato of this.contatos) {\r\n        this.usuarioService.BuscarPorId(contato.usuarioId).subscribe(response => {\n          contato.usuario = response.data;\n        });\n      }\n    });\n  }\n\n  apagarConfirmacao(apagar: boolean) {\n    this.ac = apagar;\n  }\n\n  apagar(id: number, nome: string) {\n    this.modalService.add(`Você realmente deseja apagar ${nome}?`);\n\n    if (this.ac) {\r\n      this.contatoService.Apagar(id).subscribe(response => {\n        if (response.data) {\n          this.atualizarListaContatos();\n          this.alertService.addSucesso(`${nome} apagado com sucesso!`);\n        }\n      });\r\n    }\n\n    this.modalService.fecharModal();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}