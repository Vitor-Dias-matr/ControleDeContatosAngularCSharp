{"ast":null,"code":"import _asyncToGenerator from \"E:/Workspaces/AngularCSharp/ControleDeContatosAngularCSharp/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../Services/Contato/contato-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class AtualizarContatoComponent {\n  constructor(contatoService, route, router) {\n    this.contatoService = contatoService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.contatoService.BuscarPorId(id).subscribe(response => {\n      this.contato = response.data;\n      this.atualizarContatoForm = new FormGroup({\n        id: new FormControl(id),\n        nome: new FormControl(this.contato.nome),\n        email: new FormControl(this.contato.email),\n        celular: new FormControl(this.contato.celular),\n        usuarioId: new FormControl(this.contato.usuarioId)\n      });\n    });\n  }\n  submit() {\n    if (this.atualizarContatoForm.invalid) {\n      return;\n    }\n    this.atualizar(this.atualizarContatoForm.value);\n  }\n  atualizar(contato) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (typeof contato.usuarioId === 'string') {\n        contato.usuarioId = parseInt(contato.usuarioId);\n      }\n      yield _this.contatoService.Atualizar(contato).subscribe(response => {\n        if (response.data) {\n          _this.router.navigate(['/contato']);\n          console.log('response.data: ', response.data);\n          //MENSSAGEM q foi atualizada\n        } else {\n          console.log('response.data: ', response.data);\n          // MENSSAGEM q nao foi atualizada;\n        }\n      });\n    })();\n  }\n}\n\nAtualizarContatoComponent.ɵfac = function AtualizarContatoComponent_Factory(t) {\n  return new (t || AtualizarContatoComponent)(i0.ɵɵdirectiveInject(i1.ContatoServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nAtualizarContatoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AtualizarContatoComponent,\n  selectors: [[\"app-atualizar-contato\"]],\n  decls: 40,\n  vars: 1,\n  consts: [[1, \"m-5\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [\"type\", \"hidden\", \"formControlName\", \"id\"], [1, \"d-flex\", \"justify-content-evenly\"], [1, \"form-group\", \"mb-2\", \"w-25\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"mb-4\", \"w-25\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"celular\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"celular\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"usuarioId\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"usuarioId\", \"required\", \"\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\"], [\"routerLink\", \"/contato\", 1, \"btn\", \"btn-secondary\"]],\n  template: function AtualizarContatoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Atualizar Contato\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AtualizarContatoComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"E-mail:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 6)(18, \"label\", 7);\n      i0.ɵɵtext(19, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\", 10);\n      i0.ɵɵtext(23, \"E-mail:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"div\", 9)(27, \"label\", 12);\n      i0.ɵɵtext(28, \"Celular:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 9)(31, \"label\", 14);\n      i0.ɵɵtext(32, \"UsuarioId:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵelementStart(35, \"div\", 16)(36, \"button\", 17);\n      i0.ɵɵtext(37, \"Editar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"a\", 18);\n      i0.ɵɵtext(39, \"Voltar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.atualizarContatoForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;AAWvD,OAAM,MAAOC,yBAAyB;EAIpCC,YACUC,cAAqC,EACrCC,KAAqB,EACrBC,MAAc;IAFd,mBAAc,GAAdF,cAAc;IACd,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;EACZ;EAEJC,QAAQ;IACN,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAEzD,IAAI,CAACR,cAAc,CAACS,WAAW,CAACL,EAAE,CAAC,CAACM,SAAS,CAAEC,QAAQ,IAAI;MACzD,IAAI,CAACC,OAAO,GAAGD,QAAQ,CAACE,IAAI;MAE5B,IAAI,CAACC,oBAAoB,GAAG,IAAIjB,SAAS,CAAC;QACxCO,EAAE,EAAE,IAAIR,WAAW,CAACQ,EAAE,CAAC;QACvBW,IAAI,EAAE,IAAInB,WAAW,CAAC,IAAI,CAACgB,OAAO,CAACG,IAAI,CAAC;QACxCC,KAAK,EAAE,IAAIpB,WAAW,CAAC,IAAI,CAACgB,OAAO,CAACI,KAAK,CAAC;QAC1CC,OAAO,EAAE,IAAIrB,WAAW,CAAC,IAAI,CAACgB,OAAO,CAACK,OAAO,CAAC;QAC9CC,SAAS,EAAE,IAAItB,WAAW,CAAC,IAAI,CAACgB,OAAO,CAACM,SAAS;OAClD,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,IAAI,CAACL,oBAAoB,CAACM,OAAO,EAAE;MACrC;;IAGF,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,oBAAoB,CAACQ,KAAK,CAAC;EACjD;EAEMD,SAAS,CAACT,OAAgB;IAAA;IAAA;MAC9B,IAAI,OAAOA,OAAO,CAACM,SAAS,KAAK,QAAQ,EAAE;QACzCN,OAAO,CAACM,SAAS,GAAGK,QAAQ,CAACX,OAAO,CAACM,SAAS,CAAC;;MAGjD,MAAM,KAAI,CAAClB,cAAc,CAACwB,SAAS,CAACZ,OAAO,CAAC,CAACF,SAAS,CAACC,QAAQ,IAAG;QAChE,IAAIA,QAAQ,CAACE,IAAI,EAAE;UACjB,KAAI,CAACX,MAAM,CAACuB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEhB,QAAQ,CAACE,IAAI,CAAC;UAC7C;SACD,MACI;UACHa,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEhB,QAAQ,CAACE,IAAI,CAAC;UAC7C;;MAEJ,CAAC,CAAC;IAAC;EACL;;;AAlDWf,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbtCC,8BAAiB;MACSA,iCAAiB;MAAAA,iBAAK;MAE9CA,qBAAI;MAEJA,kCAAiF;MAA3EA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MACzBD,2BAA0C;MAC1CA,8BAA2C;MAEFA,sBAAK;MAAAA,iBAAQ;MAClDA,4BAAwE;MAC1EA,iBAAM;MAENA,+BAAkC;MACMA,wBAAO;MAAAA,iBAAQ;MACrDA,6BAAyE;MAC3EA,iBAAM;MAGRA,+BAA2C;MAEFA,sBAAK;MAAAA,iBAAQ;MAClDA,4BAAwE;MAC1EA,iBAAM;MAENA,+BAAkC;MACMA,wBAAO;MAAAA,iBAAQ;MACrDA,6BAAyE;MAC3EA,iBAAM;MAGRA,+BAA2C;MAECA,yBAAQ;MAAAA,iBAAQ;MACxDA,6BAA2E;MAC7EA,iBAAM;MAENA,+BAAkC;MACUA,2BAAU;MAAAA,iBAAQ;MAC5DA,6BAA6E;MAC/EA,iBAAM;MAGRA,sBAAM;MAENA,gCAA2C;MACUA,uBAAM;MAAAA,iBAAS;MAClEA,8BAAmD;MAAAA,uBAAM;MAAAA,iBAAI;;;MA1CrCA,eAAkC;MAAlCA,oDAAkC","names":["FormControl","FormGroup","AtualizarContatoComponent","constructor","contatoService","route","router","ngOnInit","id","Number","snapshot","paramMap","get","BuscarPorId","subscribe","response","contato","data","atualizarContatoForm","nome","email","celular","usuarioId","submit","invalid","atualizar","value","parseInt","Atualizar","navigate","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\atualizar-contato\\atualizar-contato.component.ts","E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\atualizar-contato\\atualizar-contato.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { Contato } from '../../../../Models/Contato';\n\nimport { ContatoServiceService } from '../../../../Services/Contato/contato-service.service';\n\n@Component({\n  selector: 'app-atualizar-contato',\n  templateUrl: './atualizar-contato.component.html',\n  styleUrls: ['./atualizar-contato.component.css']\n})\nexport class AtualizarContatoComponent {\n  contato!: Contato;\n  atualizarContatoForm!: FormGroup;\n\n  constructor(\n    private contatoService: ContatoServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n\n    this.contatoService.BuscarPorId(id).subscribe((response) => {\n      this.contato = response.data;\n\n      this.atualizarContatoForm = new FormGroup({\n        id: new FormControl(id),\n        nome: new FormControl(this.contato.nome),\n        email: new FormControl(this.contato.email),\n        celular: new FormControl(this.contato.celular),\n        usuarioId: new FormControl(this.contato.usuarioId),\n      });\n    });\n  }\n\n  submit() {\n    if (this.atualizarContatoForm.invalid) {\n      return;\n    }\n\n    this.atualizar(this.atualizarContatoForm.value);\n  }\n\n  async atualizar(contato: Contato) {\n    if (typeof contato.usuarioId === 'string') {\n      contato.usuarioId = parseInt(contato.usuarioId);\n    }\n\n    await this.contatoService.Atualizar(contato).subscribe(response => {\n      if (response.data) {\n        this.router.navigate(['/contato']);\n        console.log('response.data: ', response.data);\n        //MENSSAGEM q foi atualizada\n      }\n      else {\n        console.log('response.data: ', response.data);\n        // MENSSAGEM q nao foi atualizada;\n      }\n    });\n  }\n}\n","<div class=\"m-5\">\r\n  <h2 class=\"text-center\">Atualizar Contato</h2>\r\n\r\n  <hr>\r\n\r\n  <form (ngSubmit)=\"submit()\" [formGroup]=\"atualizarContatoForm\" #formDir=\"ngForm\">\r\n    <input type=\"hidden\" formControlName=\"id\">\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-2 w-25\">\r\n        <label for=\"nome\" class=\"form-label\">Nome:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"nome\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"email\" class=\"form-label\">E-mail:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\" required>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-2 w-25\">\r\n        <label for=\"nome\" class=\"form-label\">Nome:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"nome\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"email\" class=\"form-label\">E-mail:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\" required>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"celular\" class=\"form-label\">Celular:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"celular\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"usuarioId\" class=\"form-label\">UsuarioId:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"usuarioId\" required>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <button type=\"submit\" class=\"btn btn-primary me-2\">Editar</button>\r\n      <a class=\"btn btn-secondary\" routerLink=\"/contato\">Voltar</a>\r\n    </div>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}