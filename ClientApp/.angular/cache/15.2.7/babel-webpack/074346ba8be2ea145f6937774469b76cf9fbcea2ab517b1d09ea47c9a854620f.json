{"ast":null,"code":"import _asyncToGenerator from \"E:/Workspaces/AngularCSharp/ControleDeContatosAngularCSharp/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../Services/Contato/contato-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AtualizarContatoComponent_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O nome \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_12_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nome.errors == null ? null : ctx_r1.nome.errors[\"required\"]);\n  }\n}\nfunction AtualizarContatoComponent_div_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O email \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_17_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Este campo s\\u00F3 aceita emails v\\u00E1lidos!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_17_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵtemplate(2, AtualizarContatoComponent_div_17_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors == null ? null : ctx_r2.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors == null ? null : ctx_r2.email.errors[\"pattern\"]);\n  }\n}\nfunction AtualizarContatoComponent_div_23_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O celular \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_23_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Este campo s\\u00F3 aceita n\\u00FAmeros!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_23_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵtemplate(2, AtualizarContatoComponent_div_23_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.celular.errors == null ? null : ctx_r3.celular.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.celular.errors == null ? null : ctx_r3.celular.errors[\"pattern\"]);\n  }\n}\nfunction AtualizarContatoComponent_div_28_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O usuarioId \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_28_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Este campo s\\u00F3 aceita n\\u00FAmeros!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_28_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵtemplate(2, AtualizarContatoComponent_div_28_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.usuarioId.errors == null ? null : ctx_r4.usuarioId.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.usuarioId.errors == null ? null : ctx_r4.usuarioId.errors[\"pattern\"]);\n  }\n}\nexport class AtualizarContatoComponent {\n  constructor(contatoService, route, router) {\n    this.contatoService = contatoService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.contatoService.BuscarPorId(id).subscribe(response => {\n      this.contato = response.data;\n      console.log('response.data: ', response.data);\n      this.atualizarContatoForm = new FormGroup({\n        id: new FormControl(id),\n        nome: new FormControl(this.contato?.nome || '', [Validators.required]),\n        email: new FormControl(this.contato?.email || '', [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]),\n        celular: new FormControl(this.contato?.celular || '', [Validators.required, Validators.pattern(/^-?\\d+$/)]),\n        usuarioId: new FormControl(this.contato?.usuarioId || '', [Validators.required, Validators.pattern(/^-?\\d+$/)])\n      });\n    });\n  }\n  get nome() {\n    return this.atualizarContatoForm.get('nome');\n  }\n  get email() {\n    return this.atualizarContatoForm.get('email');\n  }\n  get celular() {\n    return this.atualizarContatoForm.get('celular');\n  }\n  get usuarioId() {\n    return this.atualizarContatoForm.get('usuarioId');\n  }\n  submit() {\n    if (this.atualizarContatoForm.invalid) {\n      return;\n    }\n    this.atualizar(this.atualizarContatoForm.value);\n  }\n  atualizar(contato) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (typeof contato.usuarioId === 'string') {\n        contato.usuarioId = parseInt(contato.usuarioId);\n      }\n      yield _this.contatoService.Atualizar(contato).subscribe(response => {\n        if (response.data) {\n          _this.router.navigate(['/contato']);\n          console.log('response.data: ', response.data);\n          //MENSSAGEM q foi atualizada\n        } else {\n          console.log('response.data: ', response.data);\n          // MENSSAGEM q nao foi atualizada;\n        }\n      });\n    })();\n  }\n}\n\nAtualizarContatoComponent.ɵfac = function AtualizarContatoComponent_Factory(t) {\n  return new (t || AtualizarContatoComponent)(i0.ɵɵdirectiveInject(i1.ContatoServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nAtualizarContatoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AtualizarContatoComponent,\n  selectors: [[\"app-atualizar-contato\"]],\n  decls: 35,\n  vars: 5,\n  consts: [[1, \"m-5\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [\"type\", \"hidden\", \"formControlName\", \"id\"], [1, \"d-flex\", \"justify-content-evenly\"], [1, \"form-group\", \"w-25\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"erro-validacao\", 4, \"ngIf\"], [1, \"form-group\", \"mb-4\", \"w-25\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"celular\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"celular\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"usuarioId\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"usuarioId\", \"required\", \"\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\"], [\"routerLink\", \"/contato\", 1, \"btn\", \"btn-secondary\"], [1, \"erro-validacao\"], [4, \"ngIf\"]],\n  template: function AtualizarContatoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Atualizar Contato\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AtualizarContatoComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵtemplate(12, AtualizarContatoComponent_div_12_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n      i0.ɵɵtext(15, \"E-mail:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 12);\n      i0.ɵɵtemplate(17, AtualizarContatoComponent_div_17_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"div\", 10)(20, \"label\", 13);\n      i0.ɵɵtext(21, \"Celular:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵtemplate(23, AtualizarContatoComponent_div_23_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 10)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"UsuarioId:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 16);\n      i0.ɵɵtemplate(28, AtualizarContatoComponent_div_28_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelementStart(30, \"div\", 17)(31, \"button\", 18);\n      i0.ɵɵtext(32, \"Editar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"a\", 19);\n      i0.ɵɵtext(34, \"Voltar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.atualizarContatoForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.nome.invalid && _r0.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && _r0.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.celular.invalid && _r0.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.usuarioId.invalid && _r0.submitted);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AtualizarContatoComponent","constructor","contatoService","route","router","ngOnInit","id","Number","snapshot","paramMap","get","BuscarPorId","subscribe","response","contato","data","console","log","atualizarContatoForm","nome","required","email","pattern","celular","usuarioId","submit","invalid","atualizar","value","parseInt","Atualizar","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\atualizar-contato\\atualizar-contato.component.ts","E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\atualizar-contato\\atualizar-contato.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Contato } from '../../../../Models/Contato';\n\nimport { ContatoServiceService } from '../../../../Services/Contato/contato-service.service';\n\n@Component({\n  selector: 'app-atualizar-contato',\n  templateUrl: './atualizar-contato.component.html',\n  styleUrls: ['./atualizar-contato.component.css']\n})\nexport class AtualizarContatoComponent {\n  contato!: Contato;\n  atualizarContatoForm!: FormGroup;\n\n  constructor(\n    private contatoService: ContatoServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n\n    this.contatoService.BuscarPorId(id).subscribe((response) => {\n      this.contato = response.data;\n      console.log('response.data: ', response.data);\n\n      this.atualizarContatoForm = new FormGroup({\n        id: new FormControl(id),\n        nome: new FormControl(this.contato?.nome || '', [Validators.required]),\n        email: new FormControl(this.contato?.email || '', [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]),\n        celular: new FormControl(this.contato?.celular || '', [Validators.required, Validators.pattern(/^-?\\d+$/)]),\n        usuarioId: new FormControl(this.contato?.usuarioId || '', [Validators.required, Validators.pattern(/^-?\\d+$/)])\n      });\n    });\n  }\n\n  get nome() {\n    return this.atualizarContatoForm.get('nome')!;\n  }\n  get email() {\n    return this.atualizarContatoForm.get('email')!;\n  }\n  get celular() {\n    return this.atualizarContatoForm.get('celular')!;\n  }\n  get usuarioId() {\n    return this.atualizarContatoForm.get('usuarioId')!;\n  }\n\n  submit() {\n    if (this.atualizarContatoForm.invalid) {\n      return;\n    }\n\n    this.atualizar(this.atualizarContatoForm.value);\n  }\n\n  async atualizar(contato: Contato) {\n    if (typeof contato.usuarioId === 'string') {\n      contato.usuarioId = parseInt(contato.usuarioId);\n    }\n\n    await this.contatoService.Atualizar(contato).subscribe(response => {\n      if (response.data) {\n        this.router.navigate(['/contato']);\n        console.log('response.data: ', response.data);\n        //MENSSAGEM q foi atualizada\n      }\n      else {\n        console.log('response.data: ', response.data);\n        // MENSSAGEM q nao foi atualizada;\n      }\n    });\n  }\n}\n","<div class=\"m-5\">\r\n  <h2 class=\"text-center\">Atualizar Contato</h2>\r\n\r\n  <hr>\r\n\r\n  <form (ngSubmit)=\"submit()\" [formGroup]=\"atualizarContatoForm\" #formDir=\"ngForm\">\r\n    <input type=\"hidden\" formControlName=\"id\">\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group w-25\">\r\n        <label for=\"nome\" class=\"form-label\">Nome:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"nome\" required>\r\n        <div *ngIf=\"nome.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"nome.errors?.['required']\">O nome é obrigatório!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"email\" class=\"form-label\">E-mail:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\" required>\r\n        <div *ngIf=\"email.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"email.errors?.['required']\">O email é obrigatório!</p>\r\n          <p *ngIf=\"email.errors?.['pattern']\">Este campo só aceita emails válidos!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"celular\" class=\"form-label\">Celular:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"celular\" required>\r\n        <div *ngIf=\"celular.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"celular.errors?.['required']\">O celular é obrigatório!</p>\r\n          <p *ngIf=\"celular.errors?.['pattern']\">Este campo só aceita números!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"usuarioId\" class=\"form-label\">UsuarioId:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"usuarioId\" required>\r\n        <div *ngIf=\"usuarioId.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"usuarioId.errors?.['required']\">O usuarioId é obrigatório!</p>\r\n          <p *ngIf=\"usuarioId.errors?.['pattern']\">Este campo só aceita números!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <button type=\"submit\" class=\"btn btn-primary me-2\">Editar</button>\r\n      <a class=\"btn btn-secondary\" routerLink=\"/contato\">Voltar</a>\r\n    </div>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}