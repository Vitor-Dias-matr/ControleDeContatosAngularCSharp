{"ast":null,"code":"import _asyncToGenerator from \"E:/Workspaces/AngularCSharp/ControleDeContatosAngularCSharp/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet IdentificacaoUsuarioComponent = class IdentificacaoUsuarioComponent {\n  constructor(usuarioService, router) {\n    this.usuarioService = usuarioService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.identificarUsuarioForm = new FormGroup({\n      login: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n  }\n  get login() {\n    return this.identificarUsuarioForm.get('login');\n  }\n  get email() {\n    return this.identificarUsuarioForm.get('email');\n  }\n  submit() {\n    if (this.identificarUsuarioForm.invalid) {\n      return;\n    }\n    this.buscarPorEmailELogin(this.email.value, this.login.value);\n  }\n  buscarPorEmailELogin(email, login) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.usuarioService.BuscarPorEmailELogin(email, login).subscribe(response => {\n        if (response.data) {\n          _this.usuario = response.data;\n          _this.router.navigate(['alterarSenha/{this.usuario.id}']);\n        } else {\n          _this.router.navigate(['/IdentificacaoUsuario']);\n          // MENSSAGEM de erro;\n        }\n      });\n    })();\n  }\n};\n\nIdentificacaoUsuarioComponent = __decorate([Component({\n  selector: 'app-identificacao-usuario',\n  templateUrl: './identificacao-usuario.component.html',\n  styleUrls: ['./identificacao-usuario.component.css']\n})], IdentificacaoUsuarioComponent);\nexport { IdentificacaoUsuarioComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAU5D,IAAMC,6BAA6B,GAAnC,MAAMA,6BAA6B;EAIxCC,YACUC,cAAqC,EACrCC,MAAc;IADd,mBAAc,GAAdD,cAAc;IACd,WAAM,GAANC,MAAM;EACZ;EAEJC,QAAQ;IACN,IAAI,CAACC,sBAAsB,GAAG,IAAIP,SAAS,CAAC;MAC1CQ,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACjDC,KAAK,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC;KACnE,CAAC;EACJ;EAEA,IAAIF,KAAK;IACP,OAAO,IAAI,CAACD,sBAAsB,CAACI,GAAG,CAAC,OAAO,CAAE;EAClD;EACA,IAAID,KAAK;IACP,OAAO,IAAI,CAACH,sBAAsB,CAACI,GAAG,CAAC,OAAO,CAAE;EAClD;EAEAC,MAAM;IACJ,IAAI,IAAI,CAACL,sBAAsB,CAACM,OAAO,EAAE;MACvC;;IAGF,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACJ,KAAK,CAACK,KAAK,EAAE,IAAI,CAACP,KAAK,CAACO,KAAK,CAAC;EAC/D;EAEMD,oBAAoB,CAACJ,KAAa,EAAEF,KAAa;IAAA;IAAA;MACrD,MAAM,KAAI,CAACJ,cAAc,CAACY,oBAAoB,CAACN,KAAK,EAAEF,KAAK,CAAC,CAACS,SAAS,CAACC,QAAQ,IAAG;QAChF,IAAIA,QAAQ,CAACC,IAAI,EAAE;UACjB,KAAI,CAACC,OAAO,GAAGF,QAAQ,CAACC,IAAI;UAE5B,KAAI,CAACd,MAAM,CAACgB,QAAQ,CAAC,CAAC,gCAAgC,CAAC,CAAC;SACzD,MACI;UACH,KAAI,CAAChB,MAAM,CAACgB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;UAC/C;;MAEJ,CAAC,CAAC;IAAC;EACL;CACD;;AA5CYnB,6BAA6B,eALzCJ,SAAS,CAAC;EACTwB,QAAQ,EAAE,2BAA2B;EACrCC,WAAW,EAAE,wCAAwC;EACrDC,SAAS,EAAE,CAAC,uCAAuC;CACpD,CAAC,GACWtB,6BAA6B,CA4CzC;SA5CYA,6BAA6B","names":["Component","FormControl","FormGroup","Validators","IdentificacaoUsuarioComponent","constructor","usuarioService","router","ngOnInit","identificarUsuarioForm","login","required","email","get","submit","invalid","buscarPorEmailELogin","value","BuscarPorEmailELogin","subscribe","response","data","usuario","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\usuario\\alterar-senha\\identificacao-usuario\\identificacao-usuario.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Usuario } from '../../../../../Models/Usuario';\r\nimport { UsuarioServiceService } from '../../../../../Services/Usuario/usuario-service.service';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-identificacao-usuario',\n  templateUrl: './identificacao-usuario.component.html',\n  styleUrls: ['./identificacao-usuario.component.css']\n})\nexport class IdentificacaoUsuarioComponent {\n  identificarUsuarioForm!: FormGroup;\n  usuario!: Usuario;\n\n  constructor(\n    private usuarioService: UsuarioServiceService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\r\n    this.identificarUsuarioForm = new FormGroup({\r\n      login: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n    });\r\n  }\n\n  get login() {\n    return this.identificarUsuarioForm.get('login')!;\r\n  }\n  get email() {\n    return this.identificarUsuarioForm.get('email')!;\r\n  }\n\n  submit() {\n    if (this.identificarUsuarioForm.invalid) {\n      return;\r\n    }\n\n    this.buscarPorEmailELogin(this.email.value, this.login.value);\r\n  }\n\n  async buscarPorEmailELogin(email: string, login: string) {\r\n    await this.usuarioService.BuscarPorEmailELogin(email, login).subscribe(response => {\r\n      if (response.data) {\r\n        this.usuario = response.data;\r\n\r\n        this.router.navigate(['alterarSenha/{this.usuario.id}']);\r\n      }\r\n      else {\r\n        this.router.navigate(['/IdentificacaoUsuario']);\r\n        // MENSSAGEM de erro;\r\n      }\r\n    });\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}