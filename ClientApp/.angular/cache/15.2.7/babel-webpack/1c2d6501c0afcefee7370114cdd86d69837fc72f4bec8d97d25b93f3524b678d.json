{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContatoServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseController = `${environment.baseController}/api/Contato/BuscarTodos`;\n  }\n  BuscarTodos() {\n    return this.http.get(this.baseController);\n  }\n  BuscarTodosPorUsuario(idUsuario) {\n    const urlController = `${this.baseController}/PorUsuario/${idUsuario}`;\n    return this.http.get(urlController);\n  }\n  BuscarPorId(id) {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.get(urlController);\n  }\n  Adicionar(formData) {\n    return this.http.post(this.baseController, formData);\n  }\n  Atualizar(formData) {\n    return this.http.put(this.baseController, formData);\n  }\n  Apagar(id) {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.delete(urlController);\n  }\n}\nContatoServiceService.ɵfac = function ContatoServiceService_Factory(t) {\n  return new (t || ContatoServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nContatoServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContatoServiceService,\n  factory: ContatoServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAOA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,mBAAc,GAAG,GAAGH,WAAW,CAACI,cAAc,0BAA0B;EAExC;EAExCC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAsB,IAAI,CAACF,cAAc,CAAC;EAChE;EAEAG,qBAAqB,CAACC,SAAiB;IACrC,MAAMC,aAAa,GAAG,GAAG,IAAI,CAACL,cAAc,eAAeI,SAAS,EAAE;IACtE,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAsBG,aAAa,CAAC;EAC1D;EAEAC,WAAW,CAACC,EAAU;IACpB,MAAMF,aAAa,GAAG,GAAG,IAAI,CAACL,cAAc,IAAIO,EAAE,EAAE;IACpD,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAoBG,aAAa,CAAC;EACxD;EAEAG,SAAS,CAACC,QAAkB;IAC1B,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAW,IAAI,CAACV,cAAc,EAAES,QAAQ,CAAC;EAChE;EAEAE,SAAS,CAACF,QAAkB;IAC1B,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAW,IAAI,CAACZ,cAAc,EAAES,QAAQ,CAAC;EAC/D;EAEAI,MAAM,CAACN,EAAU;IACf,MAAMF,aAAa,GAAG,GAAG,IAAI,CAACL,cAAc,IAAIO,EAAE,EAAE;IACpD,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAACT,aAAa,CAAC;EACxC;;AA9BWR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAkB,SAArBlB,qBAAqB;EAAAmB,YAFpB;AAAM","names":["environment","ContatoServiceService","constructor","http","baseController","BuscarTodos","get","BuscarTodosPorUsuario","idUsuario","urlController","BuscarPorId","id","Adicionar","formData","post","Atualizar","put","Apagar","delete","factory","providedIn"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\Services\\Contato\\contato-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Contato } from 'src/app/Models/Contato';\nimport { Response } from 'src/app/Models/Response';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContatoServiceService {\n  private baseController = `${environment.baseController}/api/Contato/BuscarTodos`;\n\n  constructor(private http: HttpClient) { }\n\n  BuscarTodos(): Observable<Response<Contato[]>> {\n    return this.http.get<Response<Contato[]>>(this.baseController);\n  }\n\n  BuscarTodosPorUsuario(idUsuario: number): Observable<Response<Contato[]>> {\n    const urlController = `${this.baseController}/PorUsuario/${idUsuario}`;\n    return this.http.get<Response<Contato[]>>(urlController);\n  }\n\n  BuscarPorId(id: number): Observable<Response<Contato>> {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.get<Response<Contato>>(urlController);\n  }\n\n  Adicionar(formData: FormData): Observable<FormData> {\n    return this.http.post<FormData>(this.baseController, formData);\n  }\n\n  Atualizar(formData: FormData): Observable<FormData> {\n    return this.http.put<FormData>(this.baseController, formData);\n  }\n\n  Apagar(id: number) {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.delete(urlController);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}