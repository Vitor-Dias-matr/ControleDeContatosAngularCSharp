{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContatoServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseController = `${environment.baseController}/Contato`;\n  }\n  BuscarTodos() {\n    const urlController = `${this.baseController}/BuscarTodos`;\n    return this.http.get(urlController);\n  }\n  BuscarTodosPorUsuario(idUsuario) {\n    const urlController = `${this.baseController}/BuscarTodosPorUsuario/${idUsuario}`;\n    return this.http.get(urlController);\n  }\n  BuscarPorId(id) {\n    const urlController = `${this.baseController}/${id}`;\n    var a = this.http.get(urlController);\n    return a;\n  }\n  Adicionar(contato) {\n    return this.http.post(this.baseController, contato);\n  }\n  Atualizar(contato) {\n    return this.http.put(this.baseController, contato);\n  }\n  Apagar(id) {\n    const urlController = `${this.baseController}/Apagar/${id}`;\n    return this.http.delete(urlController);\n  }\n}\nContatoServiceService.ɵfac = function ContatoServiceService_Factory(t) {\n  return new (t || ContatoServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nContatoServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContatoServiceService,\n  factory: ContatoServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAOA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,mBAAc,GAAG,GAAGH,WAAW,CAACI,cAAc,UAAU;EAExB;EAExCC,WAAW;IACT,MAAMC,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,cAAc;IAC1D,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAsBD,aAAa,CAAC;EAC1D;EAEAE,qBAAqB,CAACC,SAAiB;IACrC,MAAMH,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,0BAA0BK,SAAS,EAAE;IACjF,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAsBD,aAAa,CAAC;EAC1D;EAEAI,WAAW,CAACC,EAAU;IACpB,MAAML,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,IAAIO,EAAE,EAAE;IACpD,IAAIC,CAAC,GAAG,IAAI,CAACT,IAAI,CAACI,GAAG,CAAoBD,aAAa,CAAC;IACvD,OAAOM,CAAC;EACV;EAEAC,SAAS,CAACC,OAAgB;IACxB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAoB,IAAI,CAACX,cAAc,EAAEU,OAAO,CAAC;EACxE;EAEAE,SAAS,CAACF,OAAgB;IACxB,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAoB,IAAI,CAACb,cAAc,EAAEU,OAAO,CAAC;EACvE;EAEAI,MAAM,CAACP,EAAU;IACf,MAAML,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,WAAWO,EAAE,EAAE;IAC3D,OAAO,IAAI,CAACR,IAAI,CAACgB,MAAM,CAAoBb,aAAa,CAAC;EAC3D;;AAhCWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAmB,SAArBnB,qBAAqB;EAAAoB,YAFpB;AAAM","names":["environment","ContatoServiceService","constructor","http","baseController","BuscarTodos","urlController","get","BuscarTodosPorUsuario","idUsuario","BuscarPorId","id","a","Adicionar","contato","post","Atualizar","put","Apagar","delete","factory","providedIn"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\Services\\Contato\\contato-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Contato } from 'src/app/Models/Contato';\nimport { Response } from 'src/app/Models/Response';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContatoServiceService {\n  private baseController = `${environment.baseController}/Contato`;\n\n  constructor(private http: HttpClient) { }\n\n  BuscarTodos(): Observable<Response<Contato[]>> {\n    const urlController = `${this.baseController}/BuscarTodos`;\n    return this.http.get<Response<Contato[]>>(urlController);\n  }\n\n  BuscarTodosPorUsuario(idUsuario: number): Observable<Response<Contato[]>> {\n    const urlController = `${this.baseController}/BuscarTodosPorUsuario/${idUsuario}`;\n    return this.http.get<Response<Contato[]>>(urlController);\n  }\n\n  BuscarPorId(id: number): Observable<Response<Contato>> {\n    const urlController = `${this.baseController}/${id}`;\n    var a = this.http.get<Response<Contato>>(urlController);\n    return a;\n  }\n\n  Adicionar(contato: Contato): Observable<Response<boolean>> {\n    return this.http.post<Response<boolean>>(this.baseController, contato);\n  }\n\n  Atualizar(contato: Contato): Observable<Response<boolean>> {\n    return this.http.put<Response<boolean>>(this.baseController, contato);\n  }\n\n  Apagar(id: number): Observable<Response<boolean>> {\n    const urlController = `${this.baseController}/Apagar/${id}`;\n    return this.http.delete<Response<boolean>>(urlController);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}