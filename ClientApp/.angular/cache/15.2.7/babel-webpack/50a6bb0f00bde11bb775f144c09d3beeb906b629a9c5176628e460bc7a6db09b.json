{"ast":null,"code":"import _asyncToGenerator from \"E:/Workspaces/AngularCSharp/ControleDeContatosAngularCSharp/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../Services/Usuario/usuario-service.service\";\nimport * as i2 from \"../../../../Services/Contato/contato-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../../Services/Menssagens/Alert/alert.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction AtualizarContatoComponent_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O nome \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_12_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nome.errors == null ? null : ctx_r1.nome.errors[\"required\"]);\n  }\n}\nfunction AtualizarContatoComponent_div_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O email \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_17_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Este campo s\\u00F3 aceita emails v\\u00E1lidos!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_17_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵtemplate(2, AtualizarContatoComponent_div_17_p_2_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors == null ? null : ctx_r2.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors == null ? null : ctx_r2.email.errors[\"email\"]);\n  }\n}\nfunction AtualizarContatoComponent_div_23_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O celular \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_23_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Este campo s\\u00F3 aceita n\\u00FAmeros!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_23_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵtemplate(2, AtualizarContatoComponent_div_23_p_2_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.celular.errors == null ? null : ctx_r3.celular.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.celular.errors == null ? null : ctx_r3.celular.errors[\"pattern\"]);\n  }\n}\nfunction AtualizarContatoComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const usuario_r11 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", usuario_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(usuario_r11.nome);\n  }\n}\nfunction AtualizarContatoComponent_div_31_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O usu\\u00E1rio \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AtualizarContatoComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, AtualizarContatoComponent_div_31_p_1_Template, 2, 0, \"p\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.usuarioId.errors == null ? null : ctx_r5.usuarioId.errors[\"required\"]);\n  }\n}\nexport class AtualizarContatoComponent {\n  constructor(usuarioService, contatoService, route, router, alertService) {\n    this.usuarioService = usuarioService;\n    this.contatoService = contatoService;\n    this.route = route;\n    this.router = router;\n    this.alertService = alertService;\n  }\n  ngOnInit() {\n    this.usuarioService.BuscarTodos().pipe(catchError(error => {\n      this.router.navigate(['/contato']);\n      this.alertService.addErro('Ocorreu um erro ao buscar os usuários para vincular ao contato! Por favor, tente novamente!');\n      return throwError('Erro: ', error);\n    })).subscribe(response => {\n      this.usuarios = response.data;\n    });\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.atualizarContatoForm = new FormGroup({\n      id: new FormControl(id),\n      nome: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      celular: new FormControl('', [Validators.required, Validators.pattern(/^[1-9]\\d*$/)]),\n      usuarioId: new FormControl('', [Validators.required])\n    });\n    this.contatoService.BuscarPorId(id).pipe(catchError(error => {\n      this.router.navigate(['/contato']);\n      this.alertService.addErro('Ocorreu um erro ao buscar o contato! Por favor, tente novamente!');\n      return throwError('Erro: ', error);\n    })).subscribe(response => {\n      this.contato = response.data;\n      this.atualizarContatoForm.patchValue({\n        nome: this.contato.nome,\n        email: this.contato.email,\n        celular: this.contato.celular,\n        usuarioId: this.contato.usuarioId\n      });\n    });\n  }\n  get nome() {\n    return this.atualizarContatoForm.get('nome');\n  }\n  get email() {\n    return this.atualizarContatoForm.get('email');\n  }\n  get celular() {\n    return this.atualizarContatoForm.get('celular');\n  }\n  get usuarioId() {\n    return this.atualizarContatoForm.get('usuarioId');\n  }\n  submit() {\n    if (this.atualizarContatoForm.invalid) {\n      return;\n    }\n    this.atualizar(this.atualizarContatoForm.value);\n  }\n  atualizar(contato) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (typeof contato.usuarioId === 'string') {\n        contato.usuarioId = parseInt(contato.usuarioId);\n      }\n      //this.contatoService.Atualizar(contato).pipe(\n      //  catchError((error) => {\n      //    console.error('erro pra atualizar o contato:', error);\n      //    this.router.navigate(['/contato']);\n      //    this.alertService.addErro('Ocorreu um erro ao atualizar o contato! Por favor, tente novamente!');\n      //    console.log(\"erro pra atualizar o contato\");\n      //    return throwError('Erro: ', error);\n      //  })\n      //).subscribe(response => {\n      //  this.router.navigate(['/contato']);\n      //  if (response && response.data) {\n      //    this.alertService.addSucesso(`${contato.nome} atualizado com sucesso!`);\n      //  }\n      //  else {\n      //    this.alertService.addErro(`Não foi possível atualizar ${contato.nome}!`);\n      //  }\n      //});\n      _this.contatoService.Atualizar(contato).subscribe(response => {\n        _this.router.navigate(['/contato']);\n        if (response && response.data) {\n          _this.alertService.addSucesso(`${contato.nome} atualizado com sucesso!`);\n        } else {\n          _this.alertService.addErro(`Não foi possível atualizar ${contato.nome}!`);\n        }\n      });\n    })();\n  }\n}\nAtualizarContatoComponent.ɵfac = function AtualizarContatoComponent_Factory(t) {\n  return new (t || AtualizarContatoComponent)(i0.ɵɵdirectiveInject(i1.UsuarioServiceService), i0.ɵɵdirectiveInject(i2.ContatoServiceService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AlertService));\n};\nAtualizarContatoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AtualizarContatoComponent,\n  selectors: [[\"app-atualizar-contato\"]],\n  decls: 38,\n  vars: 6,\n  consts: [[1, \"m-5\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [\"type\", \"hidden\", \"formControlName\", \"id\"], [1, \"d-flex\", \"justify-content-evenly\"], [1, \"form-group\", \"w-25\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"erro-validacao\", 4, \"ngIf\"], [1, \"form-group\", \"mb-4\", \"w-25\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"celular\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"celular\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"mb-2\", \"w-25\"], [\"for\", \"usuarioId\", 1, \"form-label\"], [\"formControlName\", \"usuarioId\", \"aria-label\", \"Selecione o usu\\u00E1rio\", 1, \"form-select\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\", \"hidden\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\"], [\"routerLink\", \"/contato\", 1, \"btn\", \"btn-secondary\"], [1, \"erro-validacao\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function AtualizarContatoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Atualizar Contato\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AtualizarContatoComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵtemplate(12, AtualizarContatoComponent_div_12_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n      i0.ɵɵtext(15, \"E-mail:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 12);\n      i0.ɵɵtemplate(17, AtualizarContatoComponent_div_17_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"div\", 10)(20, \"label\", 13);\n      i0.ɵɵtext(21, \"Celular:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵtemplate(23, AtualizarContatoComponent_div_23_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 15)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Usu\\u00E1rio:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"select\", 17)(28, \"option\", 18);\n      i0.ɵɵtext(29, \"Selecione\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, AtualizarContatoComponent_option_30_Template, 2, 2, \"option\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, AtualizarContatoComponent_div_31_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelementStart(33, \"div\", 20)(34, \"button\", 21);\n      i0.ɵɵtext(35, \"Editar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"a\", 22);\n      i0.ɵɵtext(37, \"Voltar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.atualizarContatoForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.nome.invalid && _r0.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && _r0.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.celular.invalid && _r0.submitted);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.usuarios);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.usuarioId.invalid && _r0.submitted);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.FormGroupDirective, i6.FormControlName, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","catchError","throwError","i0","AtualizarContatoComponent","constructor","usuarioService","contatoService","route","router","alertService","ngOnInit","BuscarTodos","pipe","error","navigate","addErro","subscribe","response","usuarios","data","id","Number","snapshot","paramMap","get","atualizarContatoForm","nome","required","email","celular","pattern","usuarioId","BuscarPorId","contato","patchValue","submit","invalid","atualizar","value","parseInt","Atualizar","addSucesso","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\atualizar-contato\\atualizar-contato.component.ts","E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\contato\\atualizar-contato\\atualizar-contato.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Usuario } from '../../../../Models/Usuario';\r\nimport { Contato } from '../../../../Models/Contato';\n\nimport { UsuarioServiceService } from '../../../../Services/Usuario/usuario-service.service';\r\nimport { ContatoServiceService } from '../../../../Services/Contato/contato-service.service';\nimport { AlertService } from '../../../../Services/Menssagens/Alert/alert.service';\r\n\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\n@Component({\n  selector: 'app-atualizar-contato',\n  templateUrl: './atualizar-contato.component.html',\n  styleUrls: ['./atualizar-contato.component.css']\n})\nexport class AtualizarContatoComponent implements OnInit {\n  usuarios!: Usuario[];\n  atualizarContatoForm!: FormGroup;\n  contato!: Contato;\n\n  constructor(\n    private usuarioService: UsuarioServiceService,\n    private contatoService: ContatoServiceService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioService.BuscarTodos().pipe(\r\n      catchError((error) => {\r\n        this.router.navigate(['/contato']);\r\n        this.alertService.addErro('Ocorreu um erro ao buscar os usuários para vincular ao contato! Por favor, tente novamente!');\r\n        return throwError('Erro: ', error);\r\n      })\r\n    ).subscribe(response => {\n      this.usuarios = response.data;\n    });\n\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n\r\n    this.atualizarContatoForm = new FormGroup({\r\n      id: new FormControl(id),\r\n      nome: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      celular: new FormControl('', [Validators.required, Validators.pattern(/^[1-9]\\d*$/)]),\r\n      usuarioId: new FormControl('', [Validators.required])\r\n    });\n\n    this.contatoService.BuscarPorId(id).pipe(\r\n      catchError((error) => {\r\n        this.router.navigate(['/contato']);\r\n        this.alertService.addErro('Ocorreu um erro ao buscar o contato! Por favor, tente novamente!');\r\n        return throwError('Erro: ', error);\r\n      })\r\n    ).subscribe((response) => {\r\n      this.contato = response.data;\r\n\r\n      this.atualizarContatoForm.patchValue({\r\n        nome: this.contato.nome,\r\n        email: this.contato.email,\r\n        celular: this.contato.celular,\r\n        usuarioId: this.contato.usuarioId\r\n      });\r\n    });\n  }\n\n  get nome() {\n    return this.atualizarContatoForm.get('nome')!;\n  }\n  get email() {\n    return this.atualizarContatoForm.get('email')!;\n  }\n  get celular() {\n    return this.atualizarContatoForm.get('celular')!;\n  }\n  get usuarioId() {\n    return this.atualizarContatoForm.get('usuarioId')!;\n  }\n\n  submit() {\n    if (this.atualizarContatoForm.invalid) {\n      return;\n    }\n\n    this.atualizar(this.atualizarContatoForm.value);\n  }\n\n  async atualizar(contato: Contato) {\n    if (typeof contato.usuarioId === 'string') {\n      contato.usuarioId = parseInt(contato.usuarioId);\n    }\n\n    //this.contatoService.Atualizar(contato).pipe(\r\n    //  catchError((error) => {\r\n    //    console.error('erro pra atualizar o contato:', error);\r\n    //    this.router.navigate(['/contato']);\r\n    //    this.alertService.addErro('Ocorreu um erro ao atualizar o contato! Por favor, tente novamente!');\r\n    //    console.log(\"erro pra atualizar o contato\");\r\n    //    return throwError('Erro: ', error);\r\n    //  })\r\n    //).subscribe(response => {\n    //  this.router.navigate(['/contato']);\n    //  if (response && response.data) {\n    //    this.alertService.addSucesso(`${contato.nome} atualizado com sucesso!`);\n    //  }\n    //  else {\n    //    this.alertService.addErro(`Não foi possível atualizar ${contato.nome}!`);\n    //  }\n    //});\n\n    this.contatoService.Atualizar(contato).subscribe(response => {\n      this.router.navigate(['/contato']);\n      if (response && response.data) {\n        this.alertService.addSucesso(`${contato.nome} atualizado com sucesso!`);\n      }\n      else {\n        this.alertService.addErro(`Não foi possível atualizar ${contato.nome}!`);\n      }\n    });\n  }\n}\n","<div class=\"m-5\">\r\n  <h2 class=\"text-center\">Atualizar Contato</h2>\r\n\r\n  <hr>\r\n\r\n  <form (ngSubmit)=\"submit()\" [formGroup]=\"atualizarContatoForm\" #formDir=\"ngForm\">\r\n    <input type=\"hidden\" formControlName=\"id\" />\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group w-25\">\r\n        <label for=\"nome\" class=\"form-label\">Nome:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"nome\" required>\r\n        <div *ngIf=\"nome.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"nome.errors?.['required']\">O nome é obrigatório!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"email\" class=\"form-label\">E-mail:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\" required>\r\n        <div *ngIf=\"email.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"email.errors?.['required']\">O email é obrigatório!</p>\r\n          <p *ngIf=\"email.errors?.['email']\">Este campo só aceita emails válidos!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-4 w-25\">\r\n        <label for=\"celular\" class=\"form-label\">Celular:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"celular\" required>\r\n        <div *ngIf=\"celular.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"celular.errors?.['required']\">O celular é obrigatório!</p>\r\n          <p *ngIf=\"celular.errors?.['pattern']\">Este campo só aceita números!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-2 w-25\">\r\n        <label for=\"usuarioId\" class=\"form-label\">Usuário:</label>\r\n        <select class=\"form-select\" formControlName=\"usuarioId\" aria-label=\"Selecione o usuário\">\r\n          <option value=\"\" disabled selected hidden>Selecione</option>\r\n          <option *ngFor=\"let usuario of usuarios\" value=\"{{usuario.id}}\">{{usuario.nome}}</option>\r\n        </select>\r\n        <div *ngIf=\"usuarioId.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"usuarioId.errors?.['required']\">O usuário é obrigatório!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <button type=\"submit\" class=\"btn btn-primary me-2\">Editar</button>\r\n      <a class=\"btn btn-secondary\" routerLink=\"/contato\">Voltar</a>\r\n    </div>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}