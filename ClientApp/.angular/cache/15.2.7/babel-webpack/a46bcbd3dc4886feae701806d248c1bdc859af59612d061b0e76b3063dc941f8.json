{"ast":null,"code":"import _asyncToGenerator from \"E:/Workspaces/AngularCSharp/ControleDeContatosAngularCSharp/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../Services/Usuario/usuario-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AlterarSenhaComponent_div_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"A senha atual \\u00E9 obrigat\\u00F3ria!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AlterarSenhaComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AlterarSenhaComponent_div_11_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.senhaAtual.errors == null ? null : ctx_r1.senhaAtual.errors[\"required\"]);\n  }\n}\nfunction AlterarSenhaComponent_div_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"A nova senha \\u00E9 obrigat\\u00F3ria!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AlterarSenhaComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AlterarSenhaComponent_div_17_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.novaSenha.errors == null ? null : ctx_r2.novaSenha.errors[\"required\"]);\n  }\n}\nfunction AlterarSenhaComponent_div_22_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"A confirma\\u00E7\\u00E3o da nova senha \\u00E9 obrigat\\u00F3ria!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AlterarSenhaComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AlterarSenhaComponent_div_22_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.confirmarNovaSenha.errors == null ? null : ctx_r3.confirmarNovaSenha.errors[\"required\"]);\n  }\n}\nexport class AlterarSenhaComponent {\n  //alterarSenha!: AlterarSenha;\n  constructor(usuarioService, route, router) {\n    this.usuarioService = usuarioService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.alterarSenhaForm = new FormGroup({\n      id: new FormControl(id),\n      senhaAtual: new FormControl('', [Validators.required]),\n      novaSenha: new FormControl('', [Validators.required]),\n      confirmarNovaSenha: new FormControl('', [Validators.required])\n    });\n  }\n  get senhaAtual() {\n    return this.alterarSenhaForm.get('senhaAtual');\n  }\n  get novaSenha() {\n    return this.alterarSenhaForm.get('novaSenha');\n  }\n  get confirmarNovaSenha() {\n    return this.alterarSenhaForm.get('confirmarNovaSenha');\n  }\n  submit() {\n    if (this.alterarSenhaForm.invalid) {\n      return;\n    }\n    this.alterarSenha(this.alterarSenhaForm.value);\n  }\n  alterarSenha(alterarSenha) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.usuarioService.AlterarSenha(alterarSenha).subscribe(response => {\n        if (response.data) {\n          _this.router.navigate([`/`]);\n          console.log(\"sucesso ao alterar senha\");\n          // MENSSAGEM de sucesso, falando q a senha foi alterada;\n        } else {\n          _this.router.navigate([`/`]);\n          console.log(\"erro ao alterar senha\");\n          // MENSSAGEM de erro, falando q a senha nao foi alterada;\n        }\n      });\n    })();\n  }\n}\n\nAlterarSenhaComponent.ɵfac = function AlterarSenhaComponent_Factory(t) {\n  return new (t || AlterarSenhaComponent)(i0.ɵɵdirectiveInject(i1.UsuarioServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nAlterarSenhaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AlterarSenhaComponent,\n  selectors: [[\"app-alterar-senha\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[1, \"m-5\"], [3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [1, \"text-center\"], [1, \"d-flex\", \"justify-content-evenly\"], [1, \"form-group\", \"mb-2\", \"w-25\"], [\"for\", \"senhaAtual\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"senhaAtual\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"erro-validacao\", 4, \"ngIf\"], [\"for\", \"novaSenha\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"novaSenha\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"confirmarNovaSenha\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"confirmarNovaSenha\", \"required\", \"\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-secondary\"], [1, \"erro-validacao\"], [4, \"ngIf\"]],\n  template: function AlterarSenhaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AlterarSenhaComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Alterar Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Senha Atual:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵtemplate(11, AlterarSenhaComponent_div_11_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Nova Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵtemplate(17, AlterarSenhaComponent_div_17_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Confirmar Nova Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵtemplate(22, AlterarSenhaComponent_div_22_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"button\", 14);\n      i0.ɵɵtext(26, \"Alterar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"a\", 15);\n      i0.ɵɵtext(28, \"Voltar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.alterarSenhaForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.senhaAtual.invalid && _r0.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.novaSenha.invalid && _r0.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.confirmarNovaSenha.invalid && _r0.submitted);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AlterarSenhaComponent","constructor","usuarioService","route","router","ngOnInit","id","Number","snapshot","paramMap","get","alterarSenhaForm","senhaAtual","required","novaSenha","confirmarNovaSenha","submit","invalid","alterarSenha","value","AlterarSenha","subscribe","response","data","navigate","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\usuario\\alterar-senha\\alterar-senha.component.ts","E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\components\\pages\\usuario\\alterar-senha\\alterar-senha.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AlterarSenha } from '../../../../Models/AlterarSenha';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UsuarioServiceService } from '../../../../Services/Usuario/usuario-service.service';\r\n\n@Component({\n  selector: 'app-alterar-senha',\n  templateUrl: './alterar-senha.component.html',\n  styleUrls: ['./alterar-senha.component.css']\n})\nexport class AlterarSenhaComponent implements OnInit {\n  alterarSenhaForm!: FormGroup;\n  //alterarSenha!: AlterarSenha;\n\n  constructor(\n    private usuarioService: UsuarioServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n\r\n    this.alterarSenhaForm = new FormGroup({\r\n      id: new FormControl(id),\r\n      senhaAtual: new FormControl('', [Validators.required]),\r\n      novaSenha: new FormControl('', [Validators.required]),\r\n      confirmarNovaSenha: new FormControl('', [Validators.required]),\r\n    });\r\n  }\n\n  get senhaAtual() {\n    return this.alterarSenhaForm.get('senhaAtual')!;\r\n  }\n  get novaSenha() {\n    return this.alterarSenhaForm.get('novaSenha')!;\r\n  }\n  get confirmarNovaSenha() {\n    return this.alterarSenhaForm.get('confirmarNovaSenha')!;\r\n  }\n\n  submit() {\n    if (this.alterarSenhaForm.invalid) {\n      return;\r\n    }\n\n    this.alterarSenha(this.alterarSenhaForm.value);\r\n  }\n\n  async alterarSenha(alterarSenha: AlterarSenha) {\r\n    await this.usuarioService.AlterarSenha(alterarSenha).subscribe(response => {\r\n      if (response.data) {\r\n        this.router.navigate([`/`]);\r\n        console.log(\"sucesso ao alterar senha\");\r\n        // MENSSAGEM de sucesso, falando q a senha foi alterada;\r\n      }\r\n      else {\r\n        this.router.navigate([`/`]);\r\n        console.log(\"erro ao alterar senha\");\r\n        // MENSSAGEM de erro, falando q a senha nao foi alterada;\r\n      }\r\n    });\r\n  }\n}\n","<div class=\"m-5\">\r\n  <form (ngSubmit)=\"submit()\" [formGroup]=\"alterarSenhaForm\" #formDir=\"ngForm\">\r\n    <h2 class=\"text-center\">Alterar Senha</h2>\r\n\r\n    <hr>\r\n\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-2 w-25\">\r\n        <label for=\"senhaAtual\" class=\"form-label\">Senha Atual:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"senhaAtual\" required>\r\n        <div *ngIf=\"senhaAtual.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"senhaAtual.errors?.['required']\">A senha atual é obrigatória!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-evenly\">\r\n      <div class=\"form-group mb-2 w-25\">\r\n        <label for=\"novaSenha\" class=\"form-label\">Nova Senha:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"novaSenha\" required>\r\n        <div *ngIf=\"novaSenha.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"novaSenha.errors?.['required']\">A nova senha é obrigatória!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-2 w-25\">\r\n        <label for=\"confirmarNovaSenha\" class=\"form-label\">Confirmar Nova Senha:</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"confirmarNovaSenha\" required>\r\n        <div *ngIf=\"confirmarNovaSenha.invalid && formDir.submitted\" class=\"erro-validacao\">\r\n          <p *ngIf=\"confirmarNovaSenha.errors?.['required']\">A confirmação da nova senha é obrigatória!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <button type=\"submit\" class=\"btn btn-primary me-2\">Alterar</button>\r\n      <a class=\"btn btn-secondary\" routerLink=\"/\">Voltar</a>\r\n    </div>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}