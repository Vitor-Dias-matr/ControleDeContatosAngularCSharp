{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseController = `${environment.baseController}/Usuario`;\n  }\n  BuscarTodos() {\n    const urlController = `${this.baseController}/BuscarTodos`;\n    return this.http.get(urlController);\n  }\n  BuscarPorId(id) {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.get(urlController);\n  }\n  Adicionar(formData) {\n    return this.http.post(this.baseController, formData);\n  }\n  Atualizar(formData) {\n    return this.http.put(this.baseController, formData);\n  }\n  Apagar(id) {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.delete(urlController);\n  }\n  AlterarSenha(formData) {\n    const urlController = `${this.baseController}/AlterarSenhaUsuario`;\n    return this.http.put(urlController, formData);\n  }\n}\nUsuarioServiceService.ɵfac = function UsuarioServiceService_Factory(t) {\n  return new (t || UsuarioServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioServiceService,\n  factory: UsuarioServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAOA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,mBAAc,GAAG,GAAGH,WAAW,CAACI,cAAc,UAAU;EAExB;EAExCC,WAAW;IACT,MAAMC,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,cAAc;IAC1D,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAsBD,aAAa,CAAC;EAC1D;EAEAE,WAAW,CAACC,EAAU;IACpB,MAAMH,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,IAAIK,EAAE,EAAE;IACpD,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAoBD,aAAa,CAAC;EACxD;EAEAI,SAAS,CAACC,QAAkB;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAW,IAAI,CAACR,cAAc,EAAEO,QAAQ,CAAC;EAChE;EAEAE,SAAS,CAACF,QAAkB;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAW,IAAI,CAACV,cAAc,EAAEO,QAAQ,CAAC;EAC/D;EAEAI,MAAM,CAACN,EAAU;IACf,MAAMH,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,IAAIK,EAAE,EAAE;IACpD,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAACV,aAAa,CAAC;EACxC;EAEAW,YAAY,CAACN,QAAkB;IAC7B,MAAML,aAAa,GAAG,GAAG,IAAI,CAACF,cAAc,sBAAsB;IAClE,OAAO,IAAI,CAACD,IAAI,CAACW,GAAG,CAAWR,aAAa,EAAEK,QAAQ,CAAC;EACzD;;AA/BWV,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAiB,SAArBjB,qBAAqB;EAAAkB,YAFpB;AAAM","names":["environment","UsuarioServiceService","constructor","http","baseController","BuscarTodos","urlController","get","BuscarPorId","id","Adicionar","formData","post","Atualizar","put","Apagar","delete","AlterarSenha","factory","providedIn"],"sourceRoot":"","sources":["E:\\Workspaces\\AngularCSharp\\ControleDeContatosAngularCSharp\\ClientApp\\src\\app\\Services\\Usuario\\usuario-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Usuario } from 'src/app/Models/Usuario';\nimport { Response } from 'src/app/Models/Response';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioServiceService {\n  private baseController = `${environment.baseController}/Usuario`;\n\n  constructor(private http: HttpClient) { }\n\n  BuscarTodos(): Observable<Response<Usuario[]>> {\n    const urlController = `${this.baseController}/BuscarTodos`;\n    return this.http.get<Response<Usuario[]>>(urlController);\n  }\n\n  BuscarPorId(id: number): Observable<Response<Usuario>> {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.get<Response<Usuario>>(urlController);\n  }\n\n  Adicionar(formData: FormData): Observable<FormData> {\n    return this.http.post<FormData>(this.baseController, formData);\n  }\n\n  Atualizar(formData: FormData): Observable<FormData> {\n    return this.http.put<FormData>(this.baseController, formData);\n  }\n\n  Apagar(id: number) {\n    const urlController = `${this.baseController}/${id}`;\n    return this.http.delete(urlController);\n  }\n\n  AlterarSenha(formData: FormData): Observable<FormData> {\n    const urlController = `${this.baseController}/AlterarSenhaUsuario`;\n    return this.http.put<FormData>(urlController, formData);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}